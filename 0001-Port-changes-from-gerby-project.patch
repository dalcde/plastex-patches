From 48b689f0617d074cbae3210cc27f9bbc7f611856 Mon Sep 17 00:00:00 2001
From: Dexter Chua <dalcde@yahoo.com.hk>
Date: Sun, 22 Mar 2020 16:46:15 +0800
Subject: [PATCH 1/4] Port changes from gerby-project

The intention is to port as few changes as possible, and eventually
maybe upstream the rest.

Date: 2020-03-22

Credits: Patrick Massot, Pieter Belmans, Raymond Cheng
---
 plasTeX/Base/LaTeX/Accents.py     | 4 ++++
 plasTeX/Base/LaTeX/Arrays.py      | 2 +-
 plasTeX/Base/LaTeX/Definitions.py | 5 +++--
 plasTeX/__init__.py               | 8 ++++++--
 4 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/plasTeX/Base/LaTeX/Accents.py b/plasTeX/Base/LaTeX/Accents.py
index d92324f..ab82439 100644
--- a/plasTeX/Base/LaTeX/Accents.py
+++ b/plasTeX/Base/LaTeX/Accents.py
@@ -25,6 +25,10 @@ class Accent(Command):
         return type(self).chars.get(content,
                 content[0]+self.middle_combining+content[1:]+self.combining)
 
+    @property
+    def source(self):
+        return type(self).chars.get(self.textContent.strip(), None)
+
     @property    
     def textContent(self):
         """
diff --git a/plasTeX/Base/LaTeX/Arrays.py b/plasTeX/Base/LaTeX/Arrays.py
index caa855c..509dbfa 100644
--- a/plasTeX/Base/LaTeX/Arrays.py
+++ b/plasTeX/Base/LaTeX/Arrays.py
@@ -92,7 +92,7 @@ class Array(Environment):
     class EndRow(Command):
         """ End of a row """
         macroName = '\\'
-        args = '* [ space ]'
+        args = '[ ! space ]'
 
         def invoke(self, tex):
             # Pop and push a new context for each row, this keeps
diff --git a/plasTeX/Base/LaTeX/Definitions.py b/plasTeX/Base/LaTeX/Definitions.py
index ea64af8..1e4d896 100644
--- a/plasTeX/Base/LaTeX/Definitions.py
+++ b/plasTeX/Base/LaTeX/Definitions.py
@@ -86,15 +86,16 @@ class newtheorem(Command):
         if attrs['*modifier*']:
             newclass = type(str(name), (Environment,),
                     {'caption': caption, 'nodeName': 'thmenv', 'thmName': name,
-                        'args': '[title]'})
+                        'args': '[title]', 'forcePars': True})
         else:
             newclass = type(str(name), (Environment,),
                     {'caption': caption, 'nodeName': 'thmenv', 'thmName': name,
-                        'counter': counter, 'args': '[title]'})
+                        'counter': counter, 'args': '[title]', 'forcePars': True})
         self.ownerDocument.context.addGlobal(name, newclass)
 
 
 class proof(Environment):
+    blockType = True
     args ='[caption]'
 
     def digest(self, tokens):
diff --git a/plasTeX/__init__.py b/plasTeX/__init__.py
index 3d3731e..4bb90ff 100644
--- a/plasTeX/__init__.py
+++ b/plasTeX/__init__.py
@@ -608,6 +608,10 @@ class Macro(Element):
                 macroargs.append(Argument('*modifier*', index, {'spec':item}))
                 index += 1
 
+            # Do not strip leading whitespace
+            elif item in '!':
+                argdict['stripLeadingWhitespace'] = False
+
             # Optional equals
             elif item in '=':
                 argdict.clear()
@@ -788,7 +792,6 @@ class TeXDocument(Document):
         ('"`', chr(8222)),
         ('"\'', chr(8220)),
         ('`', chr(8216)),
-        ("'", chr(8217)),
         ('---', chr(8212)),
         ('--', chr(8211)),
 #       ('fj', unichr(58290)),
@@ -1641,6 +1644,7 @@ class TheCounter(Command):
         # In this case, whenever a counter value comes out as a zero,
         # just hank it out.  This is especially useful in document classes
         # such as book and report which do this in the \thefigure format macro.
-        t = re.sub(r'\b0[^\dA-Za-z]+', r'', t)
+        # Disabled since this messes things like 4.0.1 up
+        # t = re.sub(r'\b0[^\dA-Za-z]+', r'', t)
 
         return tex.textTokens(t)
-- 
2.26.0

